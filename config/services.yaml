# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    env(MONGODB_URL): ''
    env(MONGODB_DB): ''
    expires_seconds: 86400
    images_path: '%kernel.project_dir%/public/media/pics/'
    notifier_base_url: '%env(NOTIFIER_URL_BASE)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    Gesdinet\JWTRefreshTokenBundle\Service\RefreshToken:
        alias: "gesdinet.jwtrefreshtoken"

    Gesdinet\JWTRefreshTokenBundle\Model\RefreshTokenManagerInterface:
        alias: "gesdinet.jwtrefreshtoken.refresh_token_manager"

    App\Service\Validation\PersonValidationService:
        public: true

    App\Service\Validation\PaginationValidationService:
        public: true

    App\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception  }